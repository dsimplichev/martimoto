import React, { useState, useEffect, useContext } from 'react';
import { FaShoppingCart } from 'react-icons/fa';
import './OilSearchForm.css';
import { OIL_OPTIONS_FLAT as OIL_OPTIONS } from '../AutoAccessoriesPage/oilData';
import axios from 'axios';
import { useNavigate } from "react-router-dom";
import { CartContext } from '../../Context/CartContext';
import dvgmaslo from '../../assets/dvgmaslo.png';
import transmitionoil from '../../assets/transmitionoil.png';
import wheeloil from '../../assets/wheeloil.png';


// ‚úÖ –ù–û–í–ê –ö–û–ù–°–¢–ê–ù–¢–ê, –≤–∑–µ—Ç–∞ –æ—Ç AddOilForm.js
const OIL_COMPOSITIONS = ["–°–∏–Ω—Ç–µ—Ç–∏—á–Ω–æ", "–ú–∏–Ω–µ—Ä–∞–ª–Ω–æ", "–ü–æ–ª—É—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω–æ"];


function OilSearchForm() {
    const [oilType, setOilType] = useState('–î–≤–∏–≥–∞—Ç–µ–ª–Ω–æ –º–∞—Å–ª–æ'); 
    const [optionsKey, setOptionsKey] = useState('–î–≤–∏–≥–∞—Ç–µ–ª–Ω–æ –º–∞—Å–ª–æ'); 
    const [manufacturer, setManufacturer] = useState('–ò–∑–±–µ—Ä–∏ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª');
    const [viscosity, setViscosity] = useState('–ò–∑–±–µ—Ä–∏ –í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç');
    const [packing, setPacking] = useState('–ò–∑–±–µ—Ä–∏ –†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞');
    // ‚úÖ –ù–û–í–û –°–™–°–¢–û–Ø–ù–ò–ï –ó–ê –¢–ò–ü –ú–ê–°–õ–û (–°–∏–Ω—Ç–µ—Ç–∏—á–Ω–æ/–ú–∏–Ω–µ—Ä–∞–ª–Ω–æ)
    const [oilComposition, setOilComposition] = useState('–ò–∑–±–µ—Ä–∏ –¢–∏–ø –º–∞—Å–ª–æ'); 
    
    const [allOils, setAllOils] = useState([]);      
    const [displayedOils, setDisplayedOils] = useState([]); 

    const { addToCart } = useContext(CartContext);
    const navigate = useNavigate();

    const currentOptions = OIL_OPTIONS[optionsKey] || {};

    const CATEGORY_MAP = [
        { label: "–ú–∞—Å–ª–æ –∑–∞ –¥–≤–∏–≥–∞—Ç–µ–ª–∏", value: "–î–≤–∏–≥–∞—Ç–µ–ª–Ω–æ –º–∞—Å–ª–æ", img: dvgmaslo, optionsKey: "–î–≤–∏–≥–∞—Ç–µ–ª–Ω–æ –º–∞—Å–ª–æ" },
        { label: "–ú–∞—Å–ª–æ –∑–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏", value: "–°–∫–æ—Ä–æ—Å—Ç–Ω–∞ –∫—É—Ç–∏—è", img: transmitionoil, optionsKey: "–ú–∞—Å–ª–æ –∑–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏" },
        { label: "–ú–∞—Å–ª–æ –∑–∞ —Ö–∏–¥—Ä–∞–≤–ª–∏–∫–∞", value: "–•–∏–¥—Ä–∞–≤–ª–∏—á–Ω–æ –º–∞—Å–ª–æ", img: wheeloil, optionsKey: "–ú–∞—Å–ª–æ –∑–∞ —Ö–∏–¥—Ä–∞–≤–ª–∏–∫–∞" },
    ];

    
    /**
     * 1. FETCH OILS: –ó–∞—Ä–µ–∂–¥–∞ –≤—Å–∏—á–∫–∏ –º–∞—Å–ª–∞ –∑–∞ –¥–∞–¥–µ–Ω–∞—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
     */
    const fetchOils = async (category) => {
        try {
            const url = category
                ? `http://localhost:5000/api/oils/category/${encodeURIComponent(category)}`
                : "http://localhost:5000/api/oils";

            const response = await axios.get(url);
            
            setAllOils(response.data);
            setDisplayedOils(response.data); 
        } catch (err) {
            console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –º–∞—Å–ª–∞:', err);
            setAllOils([]);
            setDisplayedOils([]);
        }
    };
    
    // –ù—É–ª–∏—Ä–∞–Ω–µ –Ω–∞ —Ñ–∏–ª—Ç—Ä–∏—Ç–µ –ø—Ä–∏ —Å–º—è–Ω–∞ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ç–∞ –∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∏ –º–∞—Å–ª–∞
    useEffect(() => {
        setManufacturer('–ò–∑–±–µ—Ä–∏ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª');
        setViscosity('–ò–∑–±–µ—Ä–∏ –í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç');
        setPacking('–ò–∑–±–µ—Ä–∏ –†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞');
        // ‚úÖ –ù—É–ª–∏—Ä–∞–º–µ –∏ –Ω–æ–≤–æ—Ç–æ –ø–æ–ª–µ
        setOilComposition('–ò–∑–±–µ—Ä–∏ –¢–∏–ø –º–∞—Å–ª–æ');
        
        fetchOils(oilType);
    }, [oilType]);
    
    /**
     * HANDLE ADD TO CART
     */
    const handleAddToCart = (oil) => {
        const productForCart = {
            _id: oil._id,
            title: `${oil.brand} ${oil.viscosity} ${oil.volume}`,
            price: oil.price,
            image: oil.images && oil.images.length > 0 ? oil.images[0] : '/placeholder.png',
            itemType: "oil",
            quantity: 1
        };
        addToCart(productForCart);
        alert("–ü—Ä–æ–¥—É–∫—Ç—ä—Ç –±–µ—à–µ –¥–æ–±–∞–≤–µ–Ω –≤ –∫–æ–ª–∏—á–∫–∞—Ç–∞!"); 
    };
    
    /**
     * ‚úÖ –ü–æ–º–æ—â–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∏—Ä–∞–Ω–µ: –ø—Ä–µ–º–∞—Ö–≤–∞ –≤—Å–∏—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∏ –∏ —Ä–µ–≥–∏—Å—Ç—ä—Ä
     */
    const normalizeValue = (value) => {
        if (!value) return '';
        // /\s/g —Ç—ä—Ä—Å–∏ –≤—Å–∏—á–∫–∏ –ø—Ä–∞–∑–Ω–∏–Ω–∏ (–≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª, —Ç–∞–±, –Ω–æ–≤ —Ä–µ–¥)
        return value.toString().replace(/\s/g, '').trim().toLowerCase();
    };


    /**
     * üöÄ HANDLE SEARCH: –§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ –ø–æ –∏–∑–±—Ä–∞–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
     */
    const handleSearch = (e) => {
        if (e) e.preventDefault();
        
        // –ù–æ—Ä–º–∞–ª–∏–∑–∏—Ä–∞–º–µ –≤—Ö–æ–¥–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏ –æ—Ç –ø–∞–¥–∞—â–∏—Ç–µ –º–µ–Ω—é—Ç–∞
        const searchManufacturer = normalizeValue(manufacturer);
        const searchViscosity = normalizeValue(viscosity);
        const searchPacking = normalizeValue(packing);
        const searchComposition = normalizeValue(oilComposition); // ‚úÖ –ù–û–í–ê –°–¢–û–ô–ù–û–°–¢
        
        // –ù–æ—Ä–º–∞–ª–∏–∑–∏—Ä–∞–º–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏—Ç–µ –∑–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å '–ò–∑–±–µ—Ä–∏...'
        const defaultManufacturer = normalizeValue('–ò–∑–±–µ—Ä–∏ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª');
        const defaultViscosity = normalizeValue('–ò–∑–±–µ—Ä–∏ –í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç');
        const defaultPacking = normalizeValue('–ò–∑–±–µ—Ä–∏ –†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞');
        const defaultComposition = normalizeValue('–ò–∑–±–µ—Ä–∏ –¢–∏–ø –º–∞—Å–ª–æ'); // ‚úÖ –ù–û–í–ê –°–¢–û–ô–ù–û–°–¢

        
        const filteredOils = allOils.filter(oil => {
            
            // 1. –§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ –ø–æ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª/–ú–∞—Ä–∫–∞ (oil.brand)
            const oilBrand = normalizeValue(oil.brand);
            const manufacturerMatch = searchManufacturer === defaultManufacturer || oilBrand === searchManufacturer;
            
            // 2. –§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ –ø–æ –í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç (oil.viscosity)
            const oilViscosity = normalizeValue(oil.viscosity);
            const viscosityMatch = searchViscosity === defaultViscosity || oilViscosity === searchViscosity;
            
            // 3. –§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ –ø–æ –†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞ (oil.volume)
            const oilVolume = normalizeValue(oil.volume);
            const packingMatch = searchPacking === defaultPacking || oilVolume === searchPacking;
            
            // 4. ‚úÖ –ù–û–í –§–ò–õ–¢–™–†: –¢–∏–ø –º–∞—Å–ª–æ (oil.type)
            const oilType = normalizeValue(oil.type); // –ü–æ–ª–µ—Ç–æ –≤ –±–∞–∑–∞—Ç–∞ –µ 'type'
            const compositionMatch = searchComposition === defaultComposition || oilType === searchComposition;
            
            return manufacturerMatch && viscosityMatch && packingMatch && compositionMatch; // ‚úÖ –í–∫–ª—é—á–≤–∞–º–µ –Ω–æ–≤–∏—è —Ñ–∏–ª—Ç—ä—Ä
        });

        // –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–º–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å–ø–∏—Å—ä–∫ —Å —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ
        setDisplayedOils(filteredOils);
    };
    
    /**
     * –†–ï–°–ï–¢: –ù—É–ª–∏—Ä–∞ —Ñ–∏–ª—Ç—Ä–∏—Ç–µ –∏ –ø–æ–∫–∞–∑–≤–∞ –≤—Å–∏—á–∫–∏ –º–∞—Å–ª–∞ –∑–∞ —Ç–µ–∫—É—â–∞—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
     */
    const resetSearch = () => {
        setManufacturer('–ò–∑–±–µ—Ä–∏ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª');
        setViscosity('–ò–∑–±–µ—Ä–∏ –í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç');
        setPacking('–ò–∑–±–µ—Ä–∏ –†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞');
        setOilComposition('–ò–∑–±–µ—Ä–∏ –¢–∏–ø –º–∞—Å–ª–æ'); // ‚úÖ –ù—É–ª–∏—Ä–∞–º–µ
        
        // –ü–æ–∫–∞–∑–≤–∞–º–µ –≤—Å–∏—á–∫–∏ –º–∞—Å–ª–∞, –∫–æ–∏—Ç–æ –≤–µ—á–µ —Å–∞ –∑–∞—Ä–µ–¥–µ–Ω–∏ –∑–∞ —Ç–µ–∫—É—â–∞—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
        setDisplayedOils(allOils); 
    }


    /**
     * RENDER SELECT: –•–µ–ª–ø—ä—Ä —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ —Ä–µ–Ω–¥–∏—Ä–∞–Ω–µ –Ω–∞ –ø–∞–¥–∞—â–∏—Ç–µ –º–µ–Ω—é—Ç–∞ (–∏–∑–ø–æ–ª–∑–≤–∞–º–µ —è –∏ –∑–∞ –¢–∏–ø –º–∞—Å–ª–æ)
     */
    const renderSelect = (stateValue, setStateFunction, label, key) => {
        // –ó–∞ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª, –í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç –∏ –†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ OIL_OPTIONS[key]
        if (['–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª', '–í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç', '–†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞'].includes(key) && !currentOptions[key]) return null;
        
        const optionsList = key === '–¢–∏–ø –º–∞—Å–ª–æ' ? OIL_COMPOSITIONS : (currentOptions[key] || []);

        return (
            <div className="select-wrapper">
                <select 
                    value={stateValue} 
                    onChange={(e) => setStateFunction(e.target.value)} 
                    className="select-param"
                >
                    <option value={`–ò–∑–±–µ—Ä–∏ ${label}`} disabled>{label.toUpperCase()}</option>
                    {optionsList.map(v => <option key={v} value={v}>{v}</option>)}
                </select>
            </div>
        );
    };

    return (
        <div className="oil-search-container">
            <form onSubmit={handleSearch} className="search-form-new">
                <div className="oil-type-selection">
                    {CATEGORY_MAP.map(cat => (
                        <div
                            key={cat.value}
                            className={`type-card ${oilType === cat.value ? 'active' : ''}`}
                            onClick={() => {
                                setOilType(cat.value);
                                setOptionsKey(cat.optionsKey);
                            }}
                        >
                            <img src={cat.img} alt={cat.label} className="type-icon" />
                            <span>{cat.label}</span>
                        </div>
                    ))}
                </div>

                <div className="select-group main-params-new">
                    {renderSelect(manufacturer, setManufacturer, '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª', '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª')}
                    {renderSelect(viscosity, setViscosity, '–í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç', '–í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç')}
                    {renderSelect(packing, setPacking, '–†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞', '–†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞')}
                    
                    {/* ‚úÖ –ù–û–í–û –ü–ê–î–ê–©–û –ú–ï–ù–Æ */}
                    {renderSelect(oilComposition, setOilComposition, '–¢–∏–ø –º–∞—Å–ª–æ', '–¢–∏–ø –º–∞—Å–ª–æ')} 
                </div>

                <div className="search-buttons-group">
                    <button type="submit" className="search-button-new">
                        –¢–™–†–°–ï–ù–ï
                    </button>
                    <button type="button" className="reset-button-new" onClick={resetSearch}>
                        –ü–û–ö–ê–ñ–ò –í–°–ò–ß–ö–ò
                    </button>
                </div>
            </form>

            <div className="oil-grid">
                {displayedOils.length === 0 ? (
                    <p className="no-oils-message">–ù—è–º–∞ –Ω–∞–ª–∏—á–Ω–∏ –º–∞—Å–ª–∞, –æ—Ç–≥–æ–≤–∞—Ä—è—â–∏ –Ω–∞ –í–∞—à–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏.</p>
                ) : (
                    displayedOils.map(oil => (
                        <div key={oil._id} className="oil-card">
                            <div className="oil-image-wrapper">
                                <img
                                    src={oil.images && oil.images.length > 0 ? oil.images[0] : 'https://placehold.co/150x150/EEEEEE/AAAAAA?text=OIL'}
                                    alt={oil.brand}
                                    className="oil-image"
                                />
                            </div>

                            <div className="oil-title">{oil.brand}</div>

                            <div className="oil-details">
                                <div className="oil-detail-row">
                                    <span className="oil-detail-label">–í–∏—Å–∫–æ–∑–∏—Ç–µ—Ç:</span>
                                    <span className="oil-detail-value">{oil.viscosity}</span>
                                </div>
                                <div className="oil-detail-row">
                                    <span className="oil-detail-label">–†–∞–∑—Ñ–∞—Å–æ–≤–∫–∞:</span>
                                    <span className="oil-detail-value">{oil.volume}</span>
                                </div>
                                {/* ‚úÖ –î–û–ë–ê–í–Ø–ù–ï –ù–ê –¢–ò–ü –ú–ê–°–õ–û –ö–™–ú –ö–ê–†–¢–ê–¢–ê */}
                                <div className="oil-detail-row">
                                    <span className="oil-detail-label">–¢–∏–ø:</span>
                                    <span className="oil-detail-value">{oil.type}</span> 
                                </div>
                                
                                <div className="oil-price-row">
                                    <span className="oil-price-bgn">
                                        <strong>{Number(oil.price).toFixed(2)} –ª–≤.</strong>
                                    </span>
                                    <span className="oil-price-eur">/ {(Number(oil.price) / 1.95583).toFixed(2)} &euro;</span>
                                </div>
                            </div>

                            <div className="oil-card-actions">
                                <button
                                    className="oil-button view-details-button"
                                    onClick={() => navigate(`/oil/${oil._id}`)}
                                >
                                    –í–ò–ñ –ü–û–í–ï–ß–ï
                                </button>
                                <button className="oil-button buy-button" onClick={() => handleAddToCart(oil)}>
                                    <FaShoppingCart className="buy-icon" /> –ö–£–ü–ò
                                </button>
                            </div>
                        </div>
                    ))
                )}
            </div>
        </div>
    );
}

export default OilSearchForm;